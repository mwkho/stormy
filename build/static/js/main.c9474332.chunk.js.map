{"version":3,"sources":["lib/getCoordinates.js","hooks/useDebounce.js","components/home_page/SearchBar.js","components/home_page/Logo.js","components/home_page/Filter.js","components/information/MapItem.js","components/home_page/ResultListItem.js","components/home_page/ResultList.js","components/Loading.js","components/home_page/HomePage.js","lib/selected.js","components/favourites/FavouritesMarker.js","components/favourites/FavouritesTableItem.js","components/SuccessAlert.js","components/favourites/Favourites.js","components/sidebar/Sidebar.js","components/information/AvalancheDangerItem.js","components/information/AvalancheBulletin.js","components/information/WeatherTable.js","components/information/CommentListItem.js","components/information/CommentList.js","components/information/TabPanel.js","components/information/WeatherPlot.js","components/information/AvalancheProblemsItem.js","components/information/AvalancheProblems.js","components/information/Information.js","components/App.js","serviceWorker.js","index.js"],"names":["axios","require","filterData","results","typeString","filter","result","includes","type","map","location","resultName","display_name","split","name","region","length","lat","Number","lon","module","exports","getMountainCoordinates","peakName","get","concat","then","data","getTrailCoordinates","trailName","useDebounce","value","delay","_useState","useState","_useState2","Object","slicedToArray","debounced","setDebounce","useEffect","timeout","setTimeout","clearTimeout","SearchBar","props","setValue","userInput","onSearch","useCallback","trim","setLoadStatus","searchMode","react_default","a","createElement","Fragment","TextField","style","width","marginRight","paddingLeft","variant","onChange","event","target","Logo","class","alt","className","src","Filter","Box","FormControlLabel","control","Radio","checked","mode","setMode","label","MapItem","corner1","corner2","MapContainer","center","maxBounds","zoom","scrollWheelZoom","TileLayer","url","attribution","Marker","position","ResultListItem","poi","setPlaceId","hover","setHover","_useState3","_useState4","freeze","setFreeze","close","Tooltip","title","arrow","placement","Button","backgroundColor","onClick","Close_default","mapButton","onMouseEnter","onMouseLeave","Map_default","Container","height","MapItem_MapItem","ButtonGroup","display","Axios","post","information","setPOI","objectSpread","setInformation","res","rows","id","selected","ResultsList","resultList","index","home_page_ResultListItem","key","marginBottom","Loading","CircularProgress","Typography","children","SEARCHING","SHOW","HomePage","setUserInput","setResults","_useState5","_useState6","_useState7","_useState8","loadStatus","toConsumableArray","catch","err","console","log","message","gutterBottom","ResultList","FavouritesMarker","Popup","flexDirection","color","endIcon","ChevronRight_default","deleteFavourite","Remove_default","FavouritesTableItem","TableRow","TableCell","SucessAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","SnackbarContent","Favourites","setOpen","favourites","setFavourites","header","colSpan","favouritesMarkers","favourite","parseFloat","favouritesTables","maxWidth","minZoom","zoomSnap","Paper","TableContainer","Table","TableHead","TableBody","Sidebar","setPage","navbar","setNavbar","NavBar","Grid","container","justify","item","IconButton","size","edge","spacing","AccountCircle_default","Home_default","Favorite_default","direction","alignItems","menuButton","top","Menu_default","Slide","in","mountOnEnter","unmountOnExit","useStyles","makeStyles","danger-no-rating","background","danger-low","danger-moderate","danger-considerable","danger-high","danger-extreme","danger-date","alpine","treeline","below-treeline","dangerColour","rating","AvalancheDangerItem","alp","btl","tln","classes","root","date","AvalancheBulletin","bulletin","convertDate","dateIssued","validUntil","highlights","avalancheSummary","snowpackSummary","dangerRatings","Card","CardContent","htmlSummary","summary","__html","dangersList","_rating$dangerRating","dangerRating","Date","href","word","toUpperCase","slice","join","dangerouslySetInnerHTML","stickyHeader","left","caption","WeatherTable","consolidate","weather","dateList","dt","time","hours","getHours","isZero","rowSpan","icon","main","description","temp","windSpeed","windDeg","pop","Math","round","rain","snow","theme","margin","CommentListItem","timestamp","CardHeader","avatar","Avatar","align","username","whiteSpace","paragraph","component","CommentList","placeId","comments","setComments","newComment","setNewComment","getComments","commentList","comment","place_id","comment_date","content","undefined","justifyContent","multiline","TabPanel","tab","role","hidden","Plotly","Plot","createPlotlyComponent","precipitationTotal","precipitations","totalPrecipitationList","reduce","total","precipitation","push","WeatherPlot","snowTotal","rainTotal","x","y","marker","hovertemplate","showlegend","customdata","totalRain","totalSnow","layout","xaxis","tickformat","nticks","l","r","b","t","pad","text","yaxis","config","displayModeBar","AvalancheProblemsItem","aria-label","KeyboardArrowUp_default","KeyboardArrowDown_default","Collapse","elevation","aspects","likelihood","expectedSize","AvalancheProblems","problems","problemsList","problem","information_AvalancheProblemsItem","icons","consolidateWeather","accumalator","current","wind_speed","wind_deg","options","month","day","year","hour12","arguments","hour","minute","Intl","DateTimeFormat","format","Information","_props$poi","_props$information","weatherTab","setWeatherTab","avalancheTab","setAvalancheTab","fav","setFav","setTab","_useState9","_useState10","resp","_step","_iterator","_createForOfIteratorHelper","s","n","done","e","f","marginLeft","startIcon","disabled","AppBar","Tabs","indicatorColor","textColor","tabValue","Tab","wrapped","Cloud_default","Terrain_default","information_AvalancheProblems","HOME","INFORMATION","FAVOURITES","CONDITIONS","LOADING","App","page","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9474332.chunk.js","sourcesContent":["const axios = require('axios');\nconst mountainTypes = 'volcano peak';\nconst trailTypes = 'track path footway';\n\n// helper to filter for the coordinates and name of interest when searching\nconst filterData = (results, typeString) => {\n  const filtered = results.filter((result) => typeString.includes(result.type))\n  .map((location) => {\n    // display_name key is from api\n    const resultName = location.display_name.split(', British Columbia,')[0].split(',')\n    const name = resultName[0]\n    const region = resultName[resultName.length - 1]\n    return {name, region, lat: Number(location.lat), lon: Number(location.lon)}\n  })\n  return filtered;\n}\n\nconst getMountainCoordinates = (peakName) => {\n  return axios.get(`https://nominatim.openstreetmap.org/search.php?q=${peakName}%2C+british%20columbia&polygon_geojson=1&format=jsonv2`)\n  // filter peaks with type of 'volcano' and 'peak' then extract information\n  .then((results) => filterData(results.data, mountainTypes))\n}\n\nconst getTrailCoordinates = (trailName) => {\n  return axios.get(`https://nominatim.openstreetmap.org/search.php?q=${trailName}%2C+british%20columbia&polygon_geojson=1&format=jsonv2`)\n  .then((results) => filterData(results.data, trailTypes))\n}\n\nmodule.exports = {\n  getMountainCoordinates,\n  getTrailCoordinates\n}","import { useState, useEffect } from 'react'\n\nconst useDebounce = (value, delay) => {\n  const [debounced, setDebounce] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebounce(value), delay);\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n  \n  return debounced\n}\n\nexport default useDebounce","import React, { useState, useEffect, useCallback} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport useDebounce from \"../../hooks/useDebounce\";\n\nexport default function SearchBar(props){\n  const [value, setValue] = useState(\"\")\n\n  const userInput = useDebounce(value, 200);\n  const onSearch = useCallback(props.onSearch, [userInput]);\n\n  useEffect(() => {\n    if (userInput.trim()){\n      props.setLoadStatus('SEARCHING')\n    }\n    onSearch(userInput);\n  }, [userInput, onSearch])\n\n\n  useEffect(() => {\n    setValue('')  \n  }, [props.searchMode])\n  return(\n  <>\n\n        <TextField  \n          // style={{ width: '70%' }}\n          style={{ width: '80%', marginRight: '100px', paddingLeft: '200px' }}\n          variant='filled'\n          onChange={(event) => setValue(event.target.value)}\n          value={value}     \n        />  \n  </>\n  )\n};\n\n\n    /*<form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n      <input\n        data-testid=\"trail-name-input\"\n        className=\"search-input\"\n        name=\"search_bar\"\n        type=\"text\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        placeholder=\"Where do you wanna search?\"\n      />\n    </form>*/","import React from 'react';\nimport '../styles/homePage.css';\nexport default function Logo(props){\n\n  return(\n      <div class=\"container\">\n         <img alt='logo' className=\"logo\" style={{width: props.width + \"px\"}} src=\"../../../images/stormy.png\" /> \n         <div class=\"text\">\n           <h1 class=\"h1\">Stormy BC</h1>\n         </div>\n      </div>\n  )\n\n};","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from'@material-ui/core/FormControlLabel'\nimport Box from '@material-ui/core/Box';\n \n\nexport default function Filter(props){  \n  return (\n    // hackish way to allow radio buttons to change the states\n    <>\n    <Box>\n    <FormControlLabel \n      control={<Radio \n        checked={props.mode === 'trail'}\n        onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}\n        >\n      </Radio>}\n      label=\"Trail\"\n      />\n    <FormControlLabel \n      control={<Radio\n        checked={props.mode === 'mountain'}\n        onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}\n        >\n      </Radio>}\n      label=\"Mountain\"\n      />\n      </Box>\n    </>\n\n  )};\n\n\n\n  /*\n  // hackish way to allow radio buttons to change the states\n  <div onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}>\n      <input type=\"radio\" name=\"option\" id=\"trail\" checked={props.mode === 'trail'} readOnly/>\n      <label htmlFor=\"trail\"> Trail</label>\n      <input type=\"radio\" id=\"mountain\" name=\"option\" checked={props.mode === 'mountain'} readOnly/>\n      <label htmlFor=\"mountain\"> Mountain</label>\n    </div>\n  */","import React from 'react';\nimport \"./MapItem.css\"\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet'\n\nexport default function MapItem(props){\n  const lat = props.lat\n  const lon = props.lon\n  const bound = 0.5;\n\n  // max boundaries based on these two corners\n  const corner1 = [lat - bound, lon + bound]\n  const corner2 = [lat + bound, lon - bound]\n\n  return(\n   // map that is centered around poi coordinates and a marker showing the poi */}\n    <MapContainer center={[lat, lon]} maxBounds={[corner1, corner2]} zoom={15} scrollWheelZoom={true}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'/>\n          \n      <Marker position={[lat, lon]}/>\n    </MapContainer>\n  )\n};","import Axios from 'axios'\nimport React, { useState } from 'react'\nimport MapItem from '../information/MapItem'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Container from '@material-ui/core/Container'\nimport MapIcon from '@material-ui/icons/Map';\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst ResultListItem  = (props) => {\n  const {poi, type, setPlaceId} = props;\n  const [hover, setHover] = useState(false)\n  const [freeze, setFreeze] = useState(false)\n  \n\n  const selected = (poi) => {\n    props.display('CONDITIONS')\n    Axios.post('/information', {poi: poi})\n    .then((information) => {      \n      props.setPOI({...poi, type: type})\n      props.setInformation(information.data)\n      return Axios.post(`/add/place`, { lat: poi.lat, lon: poi.lon, type, name: poi.name, region: poi.region})\n    })\n    // set placeId when the result is selected\n    .then( () => Axios.get(`get/place/${poi.lat}/${poi.lon}`))\n    .then(res => {\n      setPlaceId(res.data.rows[0].id)\n    })\n    .then(\n    setTimeout(() => {\n      props.display('INFORMATION')\n    }, 1000)\n    )\n  }\n\n  const close =(\n    <Tooltip title=\"Close\" arrow placement=\"right\">\n    <Button \n      style={{backgroundColor: 'white',}}\n      onClick={() => { setFreeze(false); setHover(false)}}\n      >\n        <CloseIcon />\n      </Button>\n    </Tooltip>\n   )\n\n  const mapButton = (<Tooltip title=\"Freeze the map\" arrow placement=\"right\">\n  <Button\n  style={{backgroundColor: 'white',}}\n  onMouseEnter={() => setHover(true)}\n  onMouseLeave={() => !freeze && setHover(false)}\n  onClick={(() => setFreeze(true))}\n  >\n    <MapIcon></MapIcon>\n  </Button>\n  </Tooltip>)\n\n  const map = ( \n  <Container\n    style={{width: '500px', height: '400px'}}\n  >\n    <MapItem lat={poi.lat} lon={poi.lon}/>\n  </Container>\n      \n  \n  )\n  \n  \n  return (\n    <>\n    <ButtonGroup>\n    \n    <Button\n    onClick={()=> selected(poi)}\n    style={{backgroundColor: 'white', width: '800px'}}\n    //onMouseEnter={() => setHover(true)}\n    //onMouseLeave={() => !freeze && setHover(false) }\n    \n    //onMouseLeave={() => setHover(false)}\n    >\n       {poi.name} <br></br>   Region: {poi.region}\n    </Button>\n    {freeze ? close : mapButton }\n    \n    </ButtonGroup>\n    {hover && map}\n    </>\n    \n  )\n}\n\nexport default ResultListItem;\n\n\n/*<li  onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onDoubleClick={()=> selected(poi)} className=\"ResultListItem\">\n      <h2>Name: {poi.name}</h2>\n      <h3>Region: {poi.region}</h3> \n      {hover && <MapItem lat={poi.lat} lon={poi.lon}/>}\n    </li>*/","import React from 'react'\nimport ResultListItem from './ResultListItem';\n\nconst  ResultsList = (props) => {\n  const {setPlaceId, type, setPOI} = props\n  const resultList = props.results.map((result, index) => {\n    return <ResultListItem setPlaceId={setPlaceId}  key={index} poi={result} setInformation={props.setInformation} display={props.display} setPOI={setPOI} type={type}/>\n  });\n  \n  return (\n    <>\n    <ul>\n      {resultList}\n    </ul>\n    {/* </Box> */}\n    <p style={{marginBottom: 500 + 'px'}}>\n    </p>\n    </>\n  ) \n}\n\nexport default ResultsList;","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Loading(props) {\n\n  return ( \n    <> \n      <CircularProgress/>\n        <Typography>\n          {props.children}\n      </Typography>\n    </>\n  \n  )\n}","import React, { useState, useEffect } from 'react';\nimport SearchBar from \"./SearchBar\"\nimport Logo from './Logo'\nimport Filter from './Filter'\nimport ResultsList from './ResultList';\nimport Loading from '../Loading';\n\nimport '../styles/homePage.css';\nimport { Typography } from '@material-ui/core';\n\n\nconst {getMountainCoordinates, getTrailCoordinates} = require(\"../../lib/getCoordinates\")\nconst SEARCHING = 'SEARCHING'\nconst SHOW = 'SHOW'\n\n\nexport default function HomePage(props){\n  const [userInput, setUserInput] = useState(\"\")\n  const [results, setResults] = useState([])\n  const [mode, setMode] = useState('trail')\n  const [loadStatus, setLoadStatus] = useState('SHOW')\n\n  useEffect(() => {\n    (mode === 'mountain' ? getMountainCoordinates(userInput) : getTrailCoordinates(userInput))\n    .then((res) => {\n      setResults([...res])\n      // setLoadStatus('SHOW') \n      setTimeout( () => setLoadStatus('SHOW') , 500)\n    })\n    .catch(err => {\n      // reset user input on error\n      setResults([])\n      console.log(err.message)\n    })\n  }, [userInput])\n\n \n  return(\n  <main>\n  {/* <> */}\n    <Logo width={200}/>\n    <Typography  display=\"block\" gutterBottom>\n      {`Look up weather forecasts and avalanche bulletins all in one place!`}\n    </Typography>\n    <Typography>\n      {`Select either 'Trail' or 'Mountain' and start typing to begin.`}\n    </Typography>\n    <Filter mode={mode} setMode={setMode}/>\n    <SearchBar setLoadStatus={setLoadStatus} searchMode={mode} onSearch={userInput => {setUserInput(userInput)}}/>\n    \n    {loadStatus === SHOW && <ResultsList results={results} display={props.display} setPOI={props.setPOI} setInformation={props.setInformation} type={mode} setPlaceId={props.setPlaceId}/>}\n    {loadStatus === SEARCHING && <Loading> Searching </Loading> }\n\n  </main>\n  // </>\n  )\n\n};","import axios from 'axios';\n\nconst selected = (poi, setPOI, setInformation, display, setPlaceId) => {\n  display('CONDITIONS')\n  axios.post('/information', {poi: poi})\n  .then((information) => {\n    setInformation(information.data)\n    setPOI(poi)\n    return axios.get(`get/place/${poi.lat}/${poi.lon}`)\n  })\n  .then(res => {\n    setPlaceId(res.data.rows[0].id)\n    display('INFORMATION')\n  })\n  .then()\n}\n\nexport default selected\n","import React from 'react';\nimport selected from \"../../lib/selected\"\nimport Button from '@material-ui/core/Button';\nimport {Marker, Popup } from 'react-leaflet'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nexport default function FavouritesMarker(props){\n  const {poi, display, setPOI, setInformation, setPlaceId } = props\n\n  return(\n  <Marker position={[poi.lat, poi.lon]}>\n    <Popup>\n      <Typography variant='body2'>\n        {poi.name}\n      </Typography>\n\n      <Typography variant='body2'>\n        Region: {poi.region}\n      </Typography>\n      <Box \n        display='flex'\n        flexDirection=\"row\"\n      >\n        <Button variant='contained' color='primary' endIcon={<ChevronRightIcon/>} onClick={() => selected(poi ,setPOI, setInformation, display, setPlaceId)}>\n          Conditions\n        </Button>\n        <Button variant='contained' color='secondary' onClick={() =>{props.deleteFavourite(poi)}} endIcon={<RemoveIcon/>}> \n          Remove \n        </Button>\n      </Box>\n    </Popup>\n  </Marker>\n  )\n\n  // return(\n  // <>\n  //   <a onClick={() => selected(poi ,setPOI, setInformation, display)}>{props.children}</a>\n  //   <Button variant='contained' color='secondary' onClick={() => props.deleteFavourite(poi)} startIcon={<RemoveIcon/>}> Remove </Button>\n  // </>\n    \n  // )\n\n};","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport selected from \"../../lib/selected\"\n\nexport default function FavouritesTableItem(props){\n  const {poi, display, setPOI, setInformation, setPlaceId } = props\n\n\n\n  return(\n    <>\n    <TableRow>\n      <TableCell>\n        <Typography variant='body2'>\n          {poi.name}\n        </Typography>\n      </TableCell>\n\n      <TableCell>\n      <Typography variant='body2'>\n        {poi.region}\n      </Typography>\n      </TableCell>\n      <TableCell className=''>\n      <Button variant='contained' color='primary' endIcon={<ChevronRightIcon/>} onClick={() => selected(poi ,setPOI, setInformation, display, setPlaceId)}>\n          Conditions\n        </Button>\n      </TableCell>\n      <TableCell className=''>\n        <Button variant='contained' color='secondary' onClick={() =>{props.deleteFavourite(poi)}} endIcon={<RemoveIcon/>}> \n          Remove \n        </Button>\n      </TableCell>\n    </TableRow>\n    </>\n  )\n};\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nexport default function SucessAlert(props) {\n\n  return ( \n    <Snackbar\n    key={'topright'}\n    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n    autoHideDuration = {2000}\n    open = {props.open}\n    onClose = {props.onClose} \n    >\n    <SnackbarContent style={{\n      backgroundColor:'#4caf50'\n    }}\n    message= {props.children}\n    />\n    </Snackbar>\n  )\n}","import React, { useState}  from 'react';\nimport Axios from 'axios'\nimport { Container, Typography } from '@material-ui/core';\nimport { MapContainer, TileLayer} from 'react-leaflet'\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport FavouritesMarker from \"./FavouritesMarker\"\nimport FavouritesTableItem from \"./FavouritesTableItem\"\nimport SuccessAlert from '../SuccessAlert'\n\nexport default function Favourites(props){\n  const [open, setOpen] = useState(false)\n\n  const { favourites, setFavourites, display, setInformation, setPOI, setPlaceId} = props\n  \n  const britishColumbia = [55.001251,-125.002441]\n  const headerNames = [\"Name\", 'Region', 'Actions']\n  const header = headerNames.map((name) => {\n    return <TableCell variant='head' colSpan={name === 'Actions'? 2 : 1 }> {name} </TableCell>\n  })  \n\n  // deleting favourites and showing popup on success\n  const deleteFavourite = (poi) => {\n    // display('LOADING')\n      Axios.get(`get/place/${poi.lat}/${poi.lon}`)\n      .then((results) => {\n        const id = results.data.rows[0].id\n        return Axios.post('delete/favourite', {id: id})\n      })\n      .then(() => Axios.get('get/favourites'))\n      .then((results) => {\n        setOpen(true)\n        setFavourites(results.data.rows)\n      })\n      .catch(err => console.log(err))\n  }\n\n    // generating favourite markers in map\n    const favouritesMarkers = !favourites ? null : favourites.map(favourite => {\n      const lat = parseFloat(favourite.lat)\n      const lon = parseFloat(favourite.lon)\n      const name = favourite.name\n      const region = favourite.region \n      return (\n        <FavouritesMarker setPlaceId={setPlaceId} poi={{lat, lon, name, region}} display={display} setPOI={setPOI} setInformation={setInformation} deleteFavourite={deleteFavourite}></FavouritesMarker>\n      )\n    })\n\n    // favourites Table item\n    const favouritesTables = !favourites ? null : favourites.map(favourite => {\n      const lat = parseFloat(favourite.lat)\n      const lon = parseFloat(favourite.lon)\n      const name = favourite.name\n      const region = favourite.region \n      return (\n        <FavouritesTableItem setPlaceId={setPlaceId} poi={{lat, lon, name, region}} display={display} setPOI={setPOI} setInformation={setInformation} deleteFavourite={deleteFavourite}></FavouritesTableItem>\n      )\n    })\n\n  // render the favourites page again on load\n  return(\n\n    <Container     maxWidth='md'>\n\n      <Typography variant='h3'>\n      Check out your favourite spots!\n      </Typography>\n      <SuccessAlert open={open} onClose={() => setOpen(false)}>\n        Removed from favourites!\n      </SuccessAlert>\n    \n\n      <Typography variant='body1'>\n        To see the conditions for your favourite locations, click on a point in the map or scroll down for your list of favourites and click on the 'Information'\n      </Typography>\n    \n      {/* <Profile/> */}\n      <MapContainer center={britishColumbia}  minZoom={4.5} zoomSnap={0.5} zoom={4.5} maxBounds={[[60, -140],[ 49.1, -114.2]]} scrollWheelZoom={true}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      {favouritesMarkers}\n    </MapContainer>\n    <Paper style={{marginBottom:\"2rem\"}}>\n    <TableContainer>\n      <Table>\n      <TableHead>\n      <TableRow>\n        {header}\n      </TableRow>\n    </TableHead>\n    <TableBody>\n        {favouritesTables}\n    </TableBody>\n      {/* <FavouritesList setFavourites={props.setFavourites} setInformation={props.setInformation} favourites={props.favourites} display={props.display} setPOI={props.setPOI} /> */}\n      </Table>\n    </TableContainer>\n        </Paper>\n    </Container>\n  )\n};\n\n","import React, { useState } from 'react';\nimport '../styles/SideNav.css';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Grid from '@material-ui/core/Grid'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Logo from '../home_page/Logo'\nimport Slide from '@material-ui/core/Slide';\n\n\n\n\n\n\nexport default function Sidebar(props) {\n  const {setPage, setFavourites}=props\n  const [navbar, setNavbar] = useState(false)\n\n  /*function ButtonStyled(){\n    const useStyles = makeStyles({\n      root: {\n        color: 'white',\n        backgroundColor: '#111',\n        width: '20px'\n      }\n    })\n    const classes = useStyles();\n  \n    return <Button \n    className={classes.root}\n    //style={{width: '2px'}}\n    size=\"small\"\n    color=\"black\"\n    variant=\"contained\"\n    onClick={closeNav}\n    >\n      {closeIcon}\n    </Button>\n  \n  }\n  */\n\n// get favourites when clicked on favourites and show loading page\nconst getFavourites = function(){\n  setPage('LOADING')\n  axios.get('/get/favourites')\n  .then((results) => {\n    setFavourites(results.data.rows)\n    setTimeout(() => setPage('FAVOURITES'), 500)\n  })\n}\n\nfunction openNav() {\n  setNavbar(true)\n}\n\nfunction closeNav() {\n  setNavbar(false)\n}\n\nconst NavBar = (\n<Box className=\"sidenav\">\n<Grid container\n  display='flex'\n  flexDirection=\"row\"\n  justify=\"flex-start\"\n  >\n  <Grid item>\n    <IconButton     \n      style={{ color: 'white'}}\n      size=\"medium\"\n      edge='start'\n      onClick={closeNav}\n    >\n      <CloseIcon />\n    </IconButton>\n  </Grid>  \n</Grid>\n\n\n<Grid \n  container \n  spacing={4}\n  display='flex'\n  flexDirection='column'\n  justify='center'\n\n  >\n<Grid item>\n<Button\n  size='large'\n  onClick={() => setPage('HOME')}\n  style={{backgroundColor: 'white', width: '140px'}}\n  color='white'\n>\n  Egg Eggerson\n  <AccountCircleIcon />\n</Button>\n</Grid>\n<Grid item>\n<Button\n  size='large'\n  onClick={() => setPage('HOME')}\n  style={{backgroundColor: 'white', width: '140px'}}\n  color='white'\n>\n  Home\n  <HomeIcon />\n</Button>\n</Grid>\n<Grid item>\n<Button\n  size='large'\n  onClick={getFavourites}\n  style={{backgroundColor: 'white', width: '140px'}}\n  color='white'\n>\n  Favourites\n  <FavoriteIcon />\n</Button>\n</Grid>\n<Grid\n  item\n  container\n  direction=\"column\"\n  justify=\"flex-end\"\n  alignItems=\"baseline\"\n>\n\n\n<Logo width={160}/>\n\n</Grid>\n\n</Grid>\n\n\n{/* </div> */}\n</Box>\n)\n\nconst menuButton = (\n<Grid \n  container\n  style={{position:'sticky', top:'0'}}\n  >\n  <Grid \n    item\n    style={{position:'sticky', top:'0'}}\n\n  >\n    <Button \n      style={{position:'sticky', top:'0'}}\n      size=\"large\"\n      onClick={openNav}\n      variant='outline'\n    >\n      <MenuIcon />\n    </Button>\n  </Grid>\n</Grid>\n)\n\n  return(\n    <>\n    <Slide direction=\"right\" in={navbar} mountOnEnter unmountOnExit>\n      {NavBar}\n    </Slide>\n\n    {!navbar && menuButton}\n     \n    \n    </>\n  )\n\n};\n\n\n//<SidebarElement image=\"../../../Images/home.png\" text=\"Home\" onClick={() => setPage('HOME')}/>\n//<SidebarElement image=\"../../../Images/profile_pic.png\" text=\"Egg Eggerson\" onClick={() => 'hi'} />\n//<SidebarElement image=\"../../../Images/heart.png\" text=\"Favourites\" onClick={getFavourites}/>","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  'danger-no-rating': {\n    background:'white',\n    color: 'black'\n  },\n  'danger-low':{\n    background:'#76ff03',\n    color: 'black'\n  },\n  'danger-moderate':{\n    background:'yellow',\n    color: 'black'\n  },\n  'danger-considerable':{\n    background:'orange',\n    color: 'black'\n  },\n  'danger-high':{\n    background:'red',\n    color: 'black'\n  },\n  'danger-extreme':{\n    background:'black',\n    color: 'white'\n  },\n  'danger-date': {\n    background:'black',\n    color: 'white'\n  },\n  'alpine': {\n    background:'#cceeff',\n    color: 'black'\n  },\n  \"treeline\": {\n    background:'#76ff03',\n    color: 'black'\n  },\n  \"below-treeline\": {\n    background:'#52b202',\n    color: 'black'\n  }\n})\n\nconst dangerColour = (rating) => {\n  if (rating.includes('N/A')) {\n    return \"-no-rating\"\n  }\n  if (rating.includes('1')) {\n    return \"-low\"\n  }\n  if (rating.includes('2')) {\n    return \"-moderate\"\n  }\n  if (rating.includes('3')) {\n    return \"-considerable\"\n  }\n  if (rating.includes('4')) {\n    return \"-high\"\n  }\n  if (rating.includes('5')) {\n    return \"-extreme\"\n  }\n}\n\nexport default function AvalancheDangerItem(props) {\n  const {alp, btl, tln} = props\n  const classes = useStyles();\n  return(\n    <>\n      <TableRow>\n        <TableCell variant='head' classes={{root: classes[\"danger-date\"]}}>{props.date}</TableCell>\n        <TableCell classes={{root: classes[\"danger-date\"]}}></TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell variant='head' classes={{root: classes[\"alpine\"]}}>Alpine</TableCell>\n        <TableCell classes={{root: classes['danger' + dangerColour(alp)]}}>{alp}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell variant='head' classes={{root: classes[\"treeline\"]}}>Treeline</TableCell>\n        <TableCell classes={{root: classes['danger' + dangerColour(tln)]}}>{tln}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell variant='head' classes={{root: classes[\"below-treeline\"]}}>Below Treeline</TableCell>\n        <TableCell classes={{root: classes['danger' + dangerColour(btl)]}}>{btl}</TableCell>\n      </TableRow>\n    </>\n  )\n}","import React from 'react';\nimport AvalancheDangerItem from './AvalancheDangerItem';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nexport default function AvalancheBulletin(props){\n  \n  const {bulletin, convertDate} = props\n  const {region, dateIssued, validUntil, highlights, avalancheSummary, snowpackSummary, dangerRatings} = bulletin\n  const message = 'The trail/mountain does not belong to a region with an avalanche bulletin.'\n  \n  // render a message when region doesn't have avalanche bulletin\n  if (!region) {\n    return(\n      <Card style={{height:\"5rem\"}}>\n      <CardContent>\n        <Typography>\n          {message}\n        </Typography> \n      </CardContent>\n    </Card>\n    )\n  }\n  \n  // function to render strings to html using dangerouslySetInnerHTML\n  const htmlSummary = (summary) => ({__html: summary})\n  \n  const dangersList = dangerRatings.map((rating) => {\n    const {alp, tln, btl} = rating.dangerRating\n    const date = convertDate(new Date(rating.date))\n    return <AvalancheDangerItem date={date} alp={'1'} tln={'3'} btl={'4'}/> \n  });\n\n  return(\n    <Paper>\n\n    <TableContainer>\n    <Table>\n    <caption> Avalanche bulletin is provided by <a href=\"https://avalanche.ca/\">Avalanche Canada</a>. </caption>\n\n      <TableHead>\n        <TableRow>\n          <TableCell>Region</TableCell> \n          <TableCell variant='body'>{region.split('-').map(word => word[0].toUpperCase()+word.slice(1 , word.length)).join(' ')}</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell variant='head'>Date Issued</TableCell>\n          <TableCell>{convertDate(new Date(dateIssued))}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell variant='head'>Valid Until</TableCell>\n          <TableCell>{validUntil > dateIssued ? convertDate(new Date(validUntil)): 'Until further notice'}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell variant='head'>HighLights</TableCell>\n          <TableCell> <div dangerouslySetInnerHTML={htmlSummary(highlights)}/></TableCell>\n        </TableRow>\n          {dangersList}\n        <TableRow>\n          <TableCell variant='head'>Avalanche Summary</TableCell>\n          <TableCell> <div dangerouslySetInnerHTML={htmlSummary(avalancheSummary)}/>  </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell variant='head'>Snowpack Summary</TableCell>\n          <TableCell>   <div dangerouslySetInnerHTML={htmlSummary(snowpackSummary)}/></TableCell>\n        </TableRow>\n    </TableBody>\n  </Table>\n    </TableContainer>\n  </Paper>  \n  \n  )\n\n};\n\n\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  stickyHeader: {\n    position:'sticky',\n    left:'0',\n    color: 'white',\n    background: 'grey'\n  },\n  caption:{\n    position:'static',\n  }\n})\n\nexport default function WeatherTable(props){\n  const consolidate = props.weather;\n  const classes = useStyles();\n  const iconPath = \"../../../weatherIcon/\"\n\n  const dateList = consolidate.dt.map((time, index) => {\n    const date = new Date(time*1000);\n    const hours = `${date.getHours()}:00`;\n    const isZero = hours !== '0:00'\n    return <TableCell key={\"date-\" + index}>{ isZero ? hours : `${props.convertDate(date, isZero)}`}</TableCell>\n  })\n\n  return(\n    <Paper>\n      <TableContainer>\n    <Table size=\"small\">\n      <caption className={classes.caption}> \n        * total volume for the hour <br/>\n        Weather data is provided by <a href=\"https://openweathermap.org/api/one-call-api\">OpenWeatherMap</a>. \n      </caption>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.stickyHeader}>Hour</TableCell>\n          {dateList}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n\n        <TableRow>\n          {/* <TableCell className={classes.stickyHeader}></TableCell> */}\n          <TableCell rowSpan={2} className={classes.stickyHeader} variant='head'>Weather</TableCell>\n          {consolidate.icon.map((icon, index) => {\n      return <TableCell key={\"icon\"+index}><img alt=\"\" src={`${iconPath}${icon}.png`}/> </TableCell>\n      })}\n        </TableRow>\n    <TableRow>\n    {consolidate.main.map((main, index) => {\n      return <TableCell key={\"main\"+index}>{main}</TableCell>\n    })}\n  </TableRow>\n    <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Weather Description</TableCell>\n    {consolidate.description.map((description, index) => {\n      return <TableCell key={\"description\"+index}>{description}</TableCell>\n    })}\n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Temperature (°C)</TableCell>\n    {consolidate.temp.map((temp, index) => {\n      return <TableCell key={\"temp\"+index}>{temp}</TableCell>\n    })}\n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Wind Speed (m/s)</TableCell>\n    {consolidate.windSpeed.map((windSpeed, index) => {\n      return <TableCell key={\"windSpeed\"+index}>{windSpeed}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Wind Direction</TableCell>\n    {consolidate.windDeg.map((windDeg, index) => {\n      return <TableCell key={\"windDeg\"+index}>{windDeg}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Percent of Precipitation</TableCell>\n    {consolidate.pop.map((pop, index) => {\n      return <TableCell key={\"pop\"+index}>{Math.round(pop*100) + \"%\"}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Rain (mm)*</TableCell>\n    {consolidate.rain.map((rain, index) => {\n      return <TableCell key={\"rain\"+index}>{rain ? rain : 0}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Snow (mm)*</TableCell>\n    {consolidate.snow.map((snow, index) => {\n      return <TableCell key={\"snow\"+index}>{snow ? snow : 0}</TableCell>\n    })}  \n  </TableRow>\n  </TableBody>\n  </Table>\n    \n  </TableContainer>\n  </Paper>\n  )\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width:\"80%\",\n    margin: theme.spacing(1)\n  }\n}))\n\nexport default function CommentListItem(props){\n  const classes = useStyles();\n  const {timestamp, convertDate, children} = props \n  const date = new Date(timestamp)\n  \n  return(\n    <Card className={classes.root}>\n      <CardHeader \n        avatar={<Avatar>U</Avatar>}\n        />\n      <CardContent>\n        <Typography align='left' color='textSecondary'>\n         {props.username}\n        </Typography>\n      <Typography align='left' variant=\"body1\"  style={{whiteSpace: 'pre-line'}} color='textPrimary'  >\n          {children }\n        </Typography>\n        <Typography align='right' paragraph color = \"textSecondary\" component='p'>\n          {convertDate(date, true)}  \n        </Typography>\n      </CardContent>\n    </Card>\n  )\n};","import React, { useState, useEffect } from 'react';\nimport CommentListItem from \"./CommentListItem\"\nimport Axios from 'axios';\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function CommentList(props){\n  const {placeId} = props\n  const [comments, setComments] = useState()\n  const [newComment, setNewComment] = useState(\"\")\n  const classes = useStyles();\n\n  const getComments = (placeId) => {\n    console.log('arrived at comment')\n    return Axios.get(`get/comments/${placeId}`)\n    .then((results) => {\n      console.log(results.data.rows)\n      setComments([...results.data.rows])\n    })\n  };\n\n  const submitComment = function() {\n    Axios.post(`/add/comment`, { placeId: placeId, comment:newComment})\n    .then(getComments(placeId)) // setComments(prev => [...prev,newComment])  })\n    .catch(err=>{\n      console.log(err)\n    })\n  }; \n  \n  //renders list of comments on initial render\n  useEffect(() => {\n    getComments(placeId)\n  }, [])\n  \n  // run this effect for every change on comments\n  useEffect(()=>{\n    setNewComment(\"\")\n  }, [comments])\n  \n\n  const commentList = !comments ? undefined : comments.map(comment => {\n    // if(place){\n      if(comment.place_id === placeId){\n        return (\n          <CommentListItem convertDate={props.convertDate} timestamp={comment.comment_date} username=\"username\">\n            {comment.content} \n          </CommentListItem>\n        )\n      }\n    // }\n    return null\n  });\n  \n  return(\n    <>\n    <Box height='2rem'/>\n      <Typography variant='h6'>\n        Have some conditions to report? Let us know by leaving a comment!\n      </Typography>\n      <Box\n        className={classes.root}\n        display=\"flex\"\n        flexDirection='column'\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <TextField  \n          style={{ width: '80%' }}\n          multiline\n          variant='filled'\n          onChange={(event) => setNewComment(event.target.value)} \n          value={newComment}            \n        />  \n        <Button\n          className={classes.root}\n          onClick={submitComment}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Submit\n        </Button >\n\n      {commentList}\n      </Box>\n    </>\n  )\n\n};\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n  const {tab, index,  children} = props \n  return (\n    <>\n      <div role=\"tabpanel\" hidden={tab !== index} >\n        {tab === index && (\n         <Box>\n           {children}\n         </Box>\n        )}\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport Paper from '@material-ui/core/Paper';\n\nconst Plotly = require('plotly.js-basic-dist');\nconst Plot = createPlotlyComponent(Plotly);\n\n// function to calculate total precipitation from snow or rain\nconst precipitationTotal = (precipitations) => {\n  const totalPrecipitationList = []\n  precipitations.reduce((total, precipitation) => {\n    total += precipitation\n    totalPrecipitationList.push(total)\n    return total\n  }, 0)\n  return totalPrecipitationList\n}\n\nexport default function WeatherPlot(props) { \n  const consolidate = props.weather\n  const dateList= consolidate.dt.map((time) => new Date(time*1000))\n  const snowTotal = precipitationTotal(consolidate.snow)\n  const rainTotal = precipitationTotal(consolidate.rain)\n\n  const temp = {\n      x: dateList,\n      y: consolidate.temp,\n      type: 'scatter',\n      mode: 'lines+markers',\n      marker: {color: 'red'},\n      hovertemplate: '%{x}<br>Temperature: %{y}\\u00B0C<extra></extra>',\n      showlegend: false\n    }\n\n    console.log(rainTotal)\n  const windSpeed = {\n    x: dateList,\n    y: consolidate.windSpeed,\n    customdata:consolidate.windDeg,\n    hovertemplate:\n    '%{x}<br>Wind Speed: %{y} m/s'+\n    '<br>Wind Direction: %{customdata}<extra></extra>',\n    type: 'scatter',\n    mode: 'lines+markers',\n    marker: {color: 'green'},\n    showlegend: false\n  }\n  const rain = {\n    x: dateList,\n    y: consolidate.rain,\n    customdata:rainTotal,\n    hovertemplate:\n    '%{x}'+\n    '<br>1 hour rain: %{y} mm'+\n    '<br>Total rain: %{customdata:.2f} mm <extra></extra>',\n    type: 'scatter',\n    mode: 'lines+markers',\n    marker: {color: 'blue'},\n    showlegend: false\n\n  }\n  const totalRain = {\n    x: dateList,\n    y: rainTotal,\n    type: 'bar',\n    marker: {color: '#cd7eaf'},\n    hovertemplate:'<extra></extra>',\n    showlegend: false\n  }\n  const snow = {\n    x: dateList,\n    y: consolidate.snow,\n    customdata:snowTotal,\n    hovertemplate:\n    '%{x}<br>1 hour snow: %{y} mm'+\n    '<br>Total snow: %{customdata:.2f} mm <extra></extra>',\n    type: 'scatter',\n    mode: 'lines+markers',\n    marker: {color: '#grey'},\n    showlegend: false\n  }\n\n  const totalSnow = {\n    x: dateList,\n    y: snowTotal,\n    type: 'bar',\n    marker: {color: '#cd7eaf'},\n    hovertemplate:'<extra></extra>',\n    showlegend: false\n  }\n  // const data = [temp, windSpeed, rain, snow, totalRain, totalSnow]\n  \n  const layout = {\n    xaxis: {\n      tickformat:'%b %e \\n %H:%M',\n      nticks:16,\n      // showspikes:true,\n      // spikesnap:\"hovered data\"\n    },\n    margin:{\n      l: 40,\n      r: 40,\n      b: 60,\n      t: 30,\n      pad: 4\n    },\n    // autosize:true\n    width:900,\n    height:200\n  }\n\n  return (\n    <Paper>\n      <Plot data={[temp]} layout={{...layout,title: {text: '<b> Temperature </b>'}, yaxis:{title: {text: 'Temperature (\\u00B0C)'}}}} config={{displayModeBar: false}}/>\n      <Plot data={[windSpeed]} layout={{...layout,title: {text: '<b>Wind Speed and Direction</b>'}, yaxis:{title: {text: 'Wind speed (m/s)'}}}} config={{displayModeBar: false}}/>\n      <Plot data={[rain, totalRain]} layout={{...layout,title: {text: '<b>Rain</b>'}, yaxis:{title: {text: 'Rain (mm)'}}}} config={{displayModeBar: false}}/>\n      <Plot data={[snow, totalSnow]} layout={{...layout,title: {text: '<b>Snow</b>'}, yaxis:{title: {text: 'Snow (mm)'}}}}  config={{displayModeBar: false}}/>\n      {/* <Plot data={data} layout={layout}/> */}\n    </Paper>\n  )\n}","import React, {useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n\nconst AvalancheProblemsItem = (props) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n  <>        \n    <TableRow >\n      <TableCell >\n        <IconButton aria-label=\"expand row\" size='small' onClick={() => setOpen(!open)}>\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n        <Typography variant=\"h6\"> \n          <b>\n            {props.type} \n            </b>\n        </Typography>\n        </IconButton>\n      </TableCell>\n    </TableRow>\n    \n    <TableRow>\n      <Collapse in={open} timeout=\"auto\">\n        <TableContainer>\n          <Table>\n            <TableRow>\n              <TableCell colSpan={4}>{props.comment}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell variant='head' > What Elevation?</TableCell >\n              <TableCell variant='head' > Which Slopes?</TableCell >\n              <TableCell variant='head' >Likelihood?</TableCell >\n              <TableCell variant='head' >Expected size?</TableCell >\n            </TableRow>\n            <TableRow>\n              <TableCell> <img alt='' src={props.elevation}/> </TableCell>\n              <TableCell> <img alt='' src={props.aspects}/> </TableCell>\n              <TableCell> <img alt='' src={props.likelihood}/> </TableCell>\n              <TableCell> <img alt='' src={props.expectedSize}/> </TableCell>\n            </TableRow>\n          </Table>\n        </TableContainer>\n      </Collapse>\n    </TableRow>\n  </>\n  )\n}\n\nexport default AvalancheProblemsItem","import React from 'react';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableBody from '@material-ui/core/TableBody';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport AvalancheProblemsItem from './AvalancheProblemsItem'\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nconst AvalancheProblems = (props) => {\n  const message = 'No problems have been reported.'\n  const problems = props.problems ? props.problems : []\n\n  const problemsList = problems.map((problem) => {\n    return <AvalancheProblemsItem type={problem.type} comment={problem.comment} elevation={problem.icons.elevation} aspects={problem.icons.aspects} likelihood={problem.icons.likelihood} expectedSize={problem.icons.expectedSize}/>\n  })\n\nreturn(\n  !problems.length ? (\n    <Card style={{height:\"5rem\"}}>\n      <CardContent>\n        <Typography>{message}</Typography> \n      </CardContent>\n    </Card>\n      ) : (\n    <TableContainer component={Paper}>\n      <Table size='small'>\n      <caption> Avalanche bulletin is provided by <a href=\"https://avalanche.ca/\">Avalanche Canada</a>. </caption>\n        <TableBody>\n          <AvalancheProblemsItem type='Cornice' comment='fake comment fake comment fake comment fake comment fake comment fake comment fake comment fake comment fake comment fake comment' elevation='https://www.avalanche.ca/assets/images/Elevation/Elevation-0-0-1_EN.png' aspects='https://www.avalanche.ca/assets/images/Compass/compass-1-1-1-0-0-0-0-1_EN.png' likelihood='https://www.avalanche.ca/assets/images/Likelihood/Likelihood-3_EN.png' expectedSize='https://www.avalanche.ca/assets/images/size/Size-15-25_EN.png'/>\n          {/* <AvalancheProblemsItem type='Cornice' comment='fake comment' elevation='https://www.avalanche.ca/assets/images/Elevation/Elevation-0-0-1_EN.png' aspects='https://www.avalanche.ca/assets/images/Compass/compass-1-1-1-0-0-0-0-1_EN.png' likelihood='https://www.avalanche.ca/assets/images/Likelihood/Likelihood-3_EN.png' expectedSize='https://www.avalanche.ca/assets/images/size/Size-15-25_EN.png'/> */}\n          {problemsList}\n        </TableBody>\n      </Table>\n    </TableContainer>\n      )\n)}\n\nexport default AvalancheProblems;","import React, { useState, useEffect } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport AppBar from '@material-ui/core/AppBar';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport axios from \"axios\"\n\nimport AvalancheBulletin from \"./AvalancheBulletin\"\nimport WeatherTable from \"./WeatherTable\"\nimport CommentList from \"./CommentList\"\nimport MapItem from \"./MapItem\"\nimport TabPanel from './TabPanel';\nimport WeatherPlot from './WeatherPlot';\nimport AvalancheProblems from './AvalancheProblems';\nimport SuccessAlert from '../SuccessAlert'\n\n// create a helper function to sort the weather data\nconst consolidateWeather = (weather) => {\n  const initial = {dt:[], temp:[], windSpeed:[], windDeg:[], rain:[], snow:[], pop:[], description:[], main:[], icon:[]}\n  return weather.reduce((accumalator, current) => {\n    accumalator.dt.push(current.dt)\n    accumalator.temp.push(current.temp)\n    accumalator.windSpeed.push(current.wind_speed)\n    accumalator.windDeg.push(current.wind_deg)\n    accumalator.pop.push(current.pop)\n    accumalator.rain.push(current.rain ? current.rain['1h'] : 0)\n    accumalator.snow.push(current.snow ? current.snow['1h'] : 0)\n    accumalator.description.push(current.weather[0].description)\n    accumalator.main.push( current.weather[0].main)\n    accumalator.icon.push(current.weather[0].icon)\n    return accumalator\n  }, initial)\n}\n\n// healper function convert date\nconst convertDate = (date, time=false) => {\n  const options = {month:'long', day:'numeric', year:'numeric', hour12: false}\n  if (time) {\n    options.hour = 'numeric'\n    options.minute = 'numeric'\n  }\n  return new Intl.DateTimeFormat('en', options).format(date)\n}\n\nexport default function Information(props){\n  const {placeId} = props\n  const {name, region, lat, lon, type} = props.poi\n  const {weather, bulletin} = props.information\n  const consolidate = consolidateWeather(weather)\n  \n  const [weatherTab, setWeatherTab] = useState(0)\n  const [avalancheTab, setAvalancheTab] = useState(0)\n  const [fav, setFav] = useState(false)\n  const [tab, setTab] = useState(0)\n  const [open, setOpen] = useState(false)\n\n  // all of tab changing code goes below here\n  const changeTab = (event, tabValue) => {\n    setTab(tabValue)\n  }\n\n  const changeWeatherTab = (event, tabValue) => {\n    setWeatherTab(tabValue)\n  }\n  const changeAvalancheTab = (event, tabValue) => {\n    setAvalancheTab(tabValue)  \n  }\n\n  // function that disables favourite button after it is clicked\n  const addToFavourites = () => {\n    axios.post(`add/favourites`, {placeId: placeId})\n    .then(() => {\n      console.log(placeId)\n      setFav(true)\n      setOpen(true)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n  }\n\n  // disable favourites after rendering\n  useEffect(() => {\n    axios.get(`get/favourite/${placeId}`)\n    .then((resp) => {\n      for (const favourite of resp.data.rows) {\n        if (favourite.place_id === placeId) {\n          setFav(true)\n          break;\n        }\n      }\n  })\n  .catch(err=>{\n    console.log(err.message)\n  })\n}, [])\n \n  return(\n    <Container \n    maxWidth='md'\n    style={{marginLeft: '165px'}}\n    > \n\n      <Typography variant=\"h3\">\n        {name}\n      </Typography>\n      <Typography variant=\"h5\">\n        Region: {region}\n      </Typography>\n      <Button startIcon={<FavoriteIcon />} onClick={addToFavourites} color=\"secondary\" variant=\"contained\" disabled={fav} >\n        Favourite\n      </Button >\n\n      <SuccessAlert open={open} onClose={() => setOpen(false)}>\n        Added to favourites!\n      </SuccessAlert>\n\n      <Typography variant=\"h6\">\n        Weather and avalanche bulletin for  lat: {lat}, lon:{lon}\n      </Typography>\n\n      <AppBar position=\"static\" color=\"default\">      \n      <Tabs  value={tab} indicatorColor=\"primary\" textColor=\"primary\" onChange={changeTab}>\n        <Tab wrapped={true} icon={<CloudIcon/>} label={\"Hourly Weather (48h)\"}/>\n        <Tab icon={<TerrainIcon/>} label='Avalanche Bulletin'/>\n        <Tab icon={<MapIcon/>} label='Map'/>\n      </Tabs>\n      </AppBar>\n      <TabPanel tab={tab} index={0}>\n      <AppBar position=\"static\" color='default'>\n        <Tabs  indicatorColor='primary' value={weatherTab} onChange={changeWeatherTab}>\n          <Tab label='Graph'/>\n          <Tab label='Table'/>\n        </Tabs>\n      </AppBar>\n        <TabPanel tab={weatherTab} index={0}>\n          <WeatherPlot weather={consolidate} />\n        </TabPanel>\n        <TabPanel tab={weatherTab} index={1}>\n          <WeatherTable convertDate={convertDate} weather={consolidate}/>\n        </TabPanel>\n      </TabPanel>\n      <TabPanel tab={tab} index={1}>\n      <AppBar position=\"static\" color='default'>\n        <Tabs indicatorColor='primary' value={avalancheTab}  onChange={changeAvalancheTab}>\n          <Tab label='Danger Ratings'/>\n          <Tab label='Problems'/>\n        </Tabs>\n      </AppBar>\n        <TabPanel tab={avalancheTab} index={0}>\n          <AvalancheBulletin  convertDate={convertDate} bulletin={bulletin}/>\n        </TabPanel>\n        <TabPanel tab={avalancheTab} index={1}>\n          <AvalancheProblems convertDate={convertDate} problems={bulletin.problems}/>\n        </TabPanel>\n      </TabPanel>\n      <TabPanel tab={tab} index={2}>\n      <AppBar position=\"static\" color='default'>\n      </AppBar>\n        <MapItem lat={lat} lon={lon} map=\"../../../images/trail.png\"/>\n      </TabPanel>\n      <CommentList placeId={placeId} convertDate={convertDate}/>\n    </Container> \n  )\n};","import React, { useState } from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\n\nimport HomePage from './home_page/HomePage'\nimport Favourites from \"./favourites/Favourites\"\nimport Sidebar from './sidebar/Sidebar'\nimport Information from \"./information/Information\"\nimport Loading from './Loading';\n\n\nconst HOME = 'HOME'\nconst INFORMATION = 'INFORMATION'\nconst FAVOURITES = 'FAVOURITES'\nconst CONDITIONS = 'CONDITIONS'\nconst LOADING = 'LOADING'\n\nexport default function App(props) {\n  const [ page, setPage] = useState(HOME)\n  const [poi, setPOI] = useState({});\n  const [favourites, setFavourites] = useState([])\n  const [information, setInformation] = useState({})\n  const [placeId, setPlaceId] = useState(0)\n\n  return (\n    \n    <div className=\"App\">\n      {(page !== LOADING && page !== CONDITIONS) && <Sidebar setPage={setPage} setFavourites={setFavourites}/>}\n      {page === HOME && <HomePage display={setPage} setPOI={setPOI} setInformation={setInformation} setPlaceId={setPlaceId}/>}\n      {page === INFORMATION && <Information  information={information} poi={poi} placeId={placeId}/>}\n      {page === FAVOURITES && <Favourites display={setPage} setInformation={setInformation} setPOI={setPOI} favourites={favourites} setFavourites={setFavourites} setPlaceId={setPlaceId}/>}\n\n      {page === LOADING && \n        <Box\n        display='flex'\n        flexDirection='column'\n        alignItems='center'\n        justifyContent=\"center\"\n        height='100vh'\n        >\n          <Loading> \n            Mapping your favourites \n          </Loading>\n        </Box>\n         }\n      {page === CONDITIONS && \n        <Box\n        display='flex'\n        flexDirection='column'\n        alignItems='center'\n        justifyContent=\"center\"\n        height='100vh'\n        >\n        <Loading> \n          Looking outside... \n        </Loading>\n      </Box>}\n    </div>\n    )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}