{"ast":null,"code":"var _jsxFileName = \"/home/mho/lighthouse/stormy/app/src/components/home_page/Filter.js\";\nimport React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Box from '@material-ui/core/Box';\nexport default function Filter(props) {\n  return (\n    /*#__PURE__*/\n    // hackish way to allow radio buttons to change the states\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Radio, {\n        checked: props.mode === 'trail',\n        onChange: function onChange(event) {\n          return props.setMode(props.mode === 'trail' ? 'mountain' : 'trail');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }\n      }),\n      label: \"Trail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Radio, {\n        checked: props.mode === 'mountain',\n        onChange: function onChange(event) {\n          return props.setMode(props.mode === 'trail' ? 'mountain' : 'trail');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }\n      }),\n      label: \"Mountain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    })))\n  );\n}\n;\n/*\n// hackish way to allow radio buttons to change the states\n<div onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}>\n    <input type=\"radio\" name=\"option\" id=\"trail\" checked={props.mode === 'trail'} readOnly/>\n    <label htmlFor=\"trail\"> Trail</label>\n    <input type=\"radio\" id=\"mountain\" name=\"option\" checked={props.mode === 'mountain'} readOnly/>\n    <label htmlFor=\"mountain\"> Mountain</label>\n  </div>\n*/","map":{"version":3,"sources":["/home/mho/lighthouse/stormy/app/src/components/home_page/Filter.js"],"names":["React","Radio","FormControlLabel","Box","Filter","props","mode","event","setMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA4B,oCAA5B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAGA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACnC;AAAA;AACE;AACA,2DACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,gBAAD;AACE,MAAA,OAAO,eAAE,oBAAC,KAAD;AACP,QAAA,OAAO,EAAEA,KAAK,CAACC,IAAN,KAAe,OADjB;AAEP,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAIF,KAAK,CAACG,OAAN,CAAcH,KAAK,CAACC,IAAN,KAAe,OAAf,GAAyB,UAAzB,GAAsC,OAApD,CAAJ;AAAA,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADX;AAME,MAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eASA,oBAAC,gBAAD;AACE,MAAA,OAAO,eAAE,oBAAC,KAAD;AACP,QAAA,OAAO,EAAED,KAAK,CAACC,IAAN,KAAe,UADjB;AAEP,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAIF,KAAK,CAACG,OAAN,CAAcH,KAAK,CAACC,IAAN,KAAe,OAAf,GAAyB,UAAzB,GAAsC,OAApD,CAAJ;AAAA,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADX;AAME,MAAA,KAAK,EAAC,UANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CADA;AAFF;AAuBE;AAAA;AAIF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from'@material-ui/core/FormControlLabel'\nimport Box from '@material-ui/core/Box';\n \n\nexport default function Filter(props){  \n  return (\n    // hackish way to allow radio buttons to change the states\n    <>\n    <Box>\n    <FormControlLabel \n      control={<Radio \n        checked={props.mode === 'trail'}\n        onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}\n        >\n      </Radio>}\n      label=\"Trail\"\n      />\n    <FormControlLabel \n      control={<Radio\n        checked={props.mode === 'mountain'}\n        onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}\n        >\n      </Radio>}\n      label=\"Mountain\"\n      />\n      </Box>\n    </>\n\n  )};\n\n\n\n  /*\n  // hackish way to allow radio buttons to change the states\n  <div onChange={event => props.setMode(props.mode === 'trail' ? 'mountain' : 'trail')}>\n      <input type=\"radio\" name=\"option\" id=\"trail\" checked={props.mode === 'trail'} readOnly/>\n      <label htmlFor=\"trail\"> Trail</label>\n      <input type=\"radio\" id=\"mountain\" name=\"option\" checked={props.mode === 'mountain'} readOnly/>\n      <label htmlFor=\"mountain\"> Mountain</label>\n    </div>\n  */"]},"metadata":{},"sourceType":"module"}