{"ast":null,"code":"var _jsxFileName = \"/home/mho/lighthouse/stormy/app/src/components/information/WeatherTable.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles({\n  stickyHeader: {\n    position: 'sticky',\n    left: '0',\n    color: 'white',\n    background: 'grey'\n  },\n  caption: {\n    position: 'static'\n  }\n});\nexport default function WeatherTable(props) {\n  var _this = this;\n\n  var consolidate = props.weather;\n  var classes = useStyles();\n  var iconPath = \"../../../weatherIcon/\";\n  var dateList = consolidate.dt.map(function (time, index) {\n    var date = new Date(time * 1000);\n    var hours = \"\".concat(date.getHours(), \":00\");\n    var isZero = hours !== '0:00';\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"date-\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, isZero ? hours : \"\".concat(props.convertDate(date, isZero)));\n  });\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    className: classes.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"* total volume for the hour \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }), \"Weather data is provided by \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://openweathermap.org/api/one-call-api\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }, \"OpenWeatherMap\"), \".\"), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Hour\"), dateList)), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    rowSpan: 2,\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Weather\"), consolidate.icon.map(function (icon, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"icon\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"\".concat(iconPath).concat(icon, \".png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 44\n      }\n    }), \" \");\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, consolidate.main.map(function (main, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"main\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }, main);\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"Weather Description\"), consolidate.description.map(function (description, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"description\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }\n    }, description);\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \"Temperature (\\xB0C)\"), consolidate.temp.map(function (temp, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"temp\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }\n    }, temp);\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Wind Speed (m/s)\"), consolidate.windSpeed.map(function (windSpeed, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"windSpeed\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    }, windSpeed);\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, \"Wind Direction\"), consolidate.windDeg.map(function (windDeg, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"windDeg\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }\n    }, windDeg);\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Percent of Precipitation\"), consolidate.pop.map(function (pop, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"pop\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }\n    }, Math.round(pop * 100) + \"%\");\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"Rain (mm)*\"), consolidate.rain.map(function (rain, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"rain\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    }, rain ? rain : 0);\n  })), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stickyHeader,\n    variant: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Snow (mm)*\"), consolidate.snow.map(function (snow, index) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: \"snow\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }\n    }, snow ? snow : 0);\n  }))))));\n}\n;","map":{"version":3,"sources":["/home/mho/lighthouse/stormy/app/src/components/information/WeatherTable.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","makeStyles","useStyles","stickyHeader","position","left","color","background","caption","WeatherTable","props","consolidate","weather","classes","iconPath","dateList","dt","map","time","index","date","Date","hours","getHours","isZero","convertDate","icon","main","description","temp","windSpeed","windDeg","pop","Math","round","rain","snow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  stickyHeader: {\n    position:'sticky',\n    left:'0',\n    color: 'white',\n    background: 'grey'\n  },\n  caption:{\n    position:'static',\n  }\n})\n\nexport default function WeatherTable(props){\n  const consolidate = props.weather;\n  const classes = useStyles();\n  const iconPath = \"../../../weatherIcon/\"\n\n  const dateList = consolidate.dt.map((time, index) => {\n    const date = new Date(time*1000);\n    const hours = `${date.getHours()}:00`;\n    const isZero = hours !== '0:00'\n    return <TableCell key={\"date-\" + index}>{ isZero ? hours : `${props.convertDate(date, isZero)}`}</TableCell>\n  })\n\n  return(\n    <Paper>\n      <TableContainer>\n    <Table size=\"small\">\n      <caption className={classes.caption}> \n        * total volume for the hour <br/>\n        Weather data is provided by <a href=\"https://openweathermap.org/api/one-call-api\">OpenWeatherMap</a>. \n      </caption>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.stickyHeader}>Hour</TableCell>\n          {dateList}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n\n        <TableRow>\n          {/* <TableCell className={classes.stickyHeader}></TableCell> */}\n          <TableCell rowSpan={2} className={classes.stickyHeader} variant='head'>Weather</TableCell>\n          {consolidate.icon.map((icon, index) => {\n      return <TableCell key={\"icon\"+index}><img alt=\"\" src={`${iconPath}${icon}.png`}/> </TableCell>\n      })}\n        </TableRow>\n    <TableRow>\n    {consolidate.main.map((main, index) => {\n      return <TableCell key={\"main\"+index}>{main}</TableCell>\n    })}\n  </TableRow>\n    <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Weather Description</TableCell>\n    {consolidate.description.map((description, index) => {\n      return <TableCell key={\"description\"+index}>{description}</TableCell>\n    })}\n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Temperature (°C)</TableCell>\n    {consolidate.temp.map((temp, index) => {\n      return <TableCell key={\"temp\"+index}>{temp}</TableCell>\n    })}\n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Wind Speed (m/s)</TableCell>\n    {consolidate.windSpeed.map((windSpeed, index) => {\n      return <TableCell key={\"windSpeed\"+index}>{windSpeed}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Wind Direction</TableCell>\n    {consolidate.windDeg.map((windDeg, index) => {\n      return <TableCell key={\"windDeg\"+index}>{windDeg}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Percent of Precipitation</TableCell>\n    {consolidate.pop.map((pop, index) => {\n      return <TableCell key={\"pop\"+index}>{Math.round(pop*100) + \"%\"}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Rain (mm)*</TableCell>\n    {consolidate.rain.map((rain, index) => {\n      return <TableCell key={\"rain\"+index}>{rain ? rain : 0}</TableCell>\n    })}  \n  </TableRow>\n  <TableRow>\n    <TableCell className={classes.stickyHeader} variant='head'>Snow (mm)*</TableCell>\n    {consolidate.snow.map((snow, index) => {\n      return <TableCell key={\"snow\"+index}>{snow ? snow : 0}</TableCell>\n    })}  \n  </TableRow>\n  </TableBody>\n  </Table>\n    \n  </TableContainer>\n  </Paper>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}