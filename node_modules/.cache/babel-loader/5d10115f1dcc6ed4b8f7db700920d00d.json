{"ast":null,"code":"import _objectSpread from \"/home/mho/lighthouse/stormy/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mho/lighthouse/stormy/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mho/lighthouse/stormy/app/src/components/home_page/ResultListItem.js\";\n\nimport Axios from 'axios';\nimport React, { useState } from 'react';\nimport MapItem from '../information/MapItem';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Container from '@material-ui/core/Container';\nimport MapIcon from '@material-ui/icons/Map';\nimport CloseIcon from '@material-ui/icons/Close';\n\nvar ResultListItem = function ResultListItem(props) {\n  var poi = props.poi,\n      type = props.type,\n      setPlaceId = props.setPlaceId;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      freeze = _useState4[0],\n      setFreeze = _useState4[1];\n\n  var selected = function selected(poi) {\n    props.display('CONDITIONS');\n    Axios.post('/information', {\n      poi: poi\n    }).then(function (information) {\n      props.setPOI(_objectSpread({}, poi, {\n        type: type\n      }));\n      props.setInformation(information.data);\n      return Axios.post(\"/add/place\", {\n        lat: poi.lat,\n        lon: poi.lon,\n        type: type,\n        name: poi.name,\n        region: poi.region\n      });\n    }) // set placeId when the result is selected\n    .then(function () {\n      return Axios.get(\"get/place/\".concat(poi.lat, \"/\").concat(poi.lon));\n    }).then(function (res) {\n      setPlaceId(res.data.rows[0].id);\n    }).then(setTimeout(function () {\n      props.display('INFORMATION');\n    }, 1000));\n  };\n\n  var close = /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Close\",\n    arrow: true,\n    placement: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: 'white'\n    },\n    onClick: function onClick() {\n      setFreeze(false);\n      setHover(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n  var mapButton = /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Freeze the map\",\n    arrow: true,\n    placement: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: 'white'\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return !freeze && setHover(false);\n    },\n    onClick: function onClick() {\n      return setFreeze(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MapIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  })));\n  var map = /*#__PURE__*/React.createElement(Container, {\n    style: {\n      width: '500px',\n      height: '400px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MapItem, {\n    lat: poi.lat,\n    lon: poi.lon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return selected(poi);\n    },\n    style: {\n      backgroundColor: 'white',\n      width: '800px'\n    } //onMouseEnter={() => setHover(true)}\n    //onMouseLeave={() => !freeze && setHover(false) }\n    //onMouseLeave={() => setHover(false)}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, poi.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }), \"   Region: \", poi.region), freeze ? close : mapButton), hover && map);\n};\n\nexport default ResultListItem;\n/*<li  onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onDoubleClick={()=> selected(poi)} className=\"ResultListItem\">\n      <h2>Name: {poi.name}</h2>\n      <h3>Region: {poi.region}</h3> \n      {hover && <MapItem lat={poi.lat} lon={poi.lon}/>}\n    </li>*/","map":{"version":3,"sources":["/home/mho/lighthouse/stormy/app/src/components/home_page/ResultListItem.js"],"names":["Axios","React","useState","MapItem","Button","ButtonGroup","Tooltip","Container","MapIcon","CloseIcon","ResultListItem","props","poi","type","setPlaceId","hover","setHover","freeze","setFreeze","selected","display","post","then","information","setPOI","setInformation","data","lat","lon","name","region","get","res","rows","id","setTimeout","close","backgroundColor","mapButton","map","width","height"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport React, { useState } from 'react'\nimport MapItem from '../information/MapItem'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Container from '@material-ui/core/Container'\nimport MapIcon from '@material-ui/icons/Map';\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst ResultListItem  = (props) => {\n  const {poi, type, setPlaceId} = props;\n  const [hover, setHover] = useState(false)\n  const [freeze, setFreeze] = useState(false)\n  \n\n  const selected = (poi) => {\n    props.display('CONDITIONS')\n    Axios.post('/information', {poi: poi})\n    .then((information) => {      \n      props.setPOI({...poi, type: type})\n      props.setInformation(information.data)\n      return Axios.post(`/add/place`, { lat: poi.lat, lon: poi.lon, type, name: poi.name, region: poi.region})\n    })\n    // set placeId when the result is selected\n    .then( () => Axios.get(`get/place/${poi.lat}/${poi.lon}`))\n    .then(res => {\n      setPlaceId(res.data.rows[0].id)\n    })\n    .then(\n    setTimeout(() => {\n      props.display('INFORMATION')\n    }, 1000)\n    )\n  }\n\n  const close =(\n    <Tooltip title=\"Close\" arrow placement=\"right\">\n    <Button \n      style={{backgroundColor: 'white',}}\n      onClick={() => { setFreeze(false); setHover(false)}}\n      >\n        <CloseIcon />\n      </Button>\n    </Tooltip>\n   )\n\n  const mapButton = (<Tooltip title=\"Freeze the map\" arrow placement=\"right\">\n  <Button\n  style={{backgroundColor: 'white',}}\n  onMouseEnter={() => setHover(true)}\n  onMouseLeave={() => !freeze && setHover(false)}\n  onClick={(() => setFreeze(true))}\n  >\n    <MapIcon></MapIcon>\n  </Button>\n  </Tooltip>)\n\n  const map = ( \n  <Container\n    style={{width: '500px', height: '400px'}}\n  >\n    <MapItem lat={poi.lat} lon={poi.lon}/>\n  </Container>\n      \n  \n  )\n  \n  \n  return (\n    <>\n    <ButtonGroup>\n    \n    <Button\n    onClick={()=> selected(poi)}\n    style={{backgroundColor: 'white', width: '800px'}}\n    //onMouseEnter={() => setHover(true)}\n    //onMouseLeave={() => !freeze && setHover(false) }\n    \n    //onMouseLeave={() => setHover(false)}\n    >\n       {poi.name} <br></br>   Region: {poi.region}\n    </Button>\n    {freeze ? close : mapButton }\n    \n    </ButtonGroup>\n    {hover && map}\n    </>\n    \n  )\n}\n\nexport default ResultListItem;\n\n\n/*<li  onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onDoubleClick={()=> selected(poi)} className=\"ResultListItem\">\n      <h2>Name: {poi.name}</h2>\n      <h3>Region: {poi.region}</h3> \n      {hover && <MapItem lat={poi.lat} lon={poi.lon}/>}\n    </li>*/"]},"metadata":{},"sourceType":"module"}