{"ast":null,"code":"import _slicedToArray from \"/home/mho/lighthouse/stormy/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mho/lighthouse/stormy/app/src/components/home_page/SearchBar.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport useDebounce from \"../../hooks/useDebounce\";\nexport default function SearchBar(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var userInput = useDebounce(value, 200);\n  var onSearch = useCallback(props.onSearch, [userInput]);\n  useEffect(function () {\n    if (userInput.trim()) {\n      props.setLoadStatus('SEARCHING');\n    }\n\n    onSearch(userInput);\n  }, [userInput, onSearch]);\n  useEffect(function () {\n    setValue('');\n  }, [props.searchMode]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField // style={{ width: '70%' }}\n  , {\n    style: {\n      width: '80%',\n      marginRight: '100px',\n      paddingLeft: '200px'\n    },\n    variant: \"filled\",\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    },\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n}\n;\n/*<form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n  <input\n    data-testid=\"trail-name-input\"\n    className=\"search-input\"\n    name=\"search_bar\"\n    type=\"text\"\n    value={value}\n    onChange={(event) => setValue(event.target.value)}\n    placeholder=\"Where do you wanna search?\"\n  />\n</form>*/","map":{"version":3,"sources":["/home/mho/lighthouse/stormy/app/src/components/home_page/SearchBar.js"],"names":["React","useState","useEffect","useCallback","TextField","useDebounce","SearchBar","props","value","setValue","userInput","onSearch","trim","setLoadStatus","searchMode","width","marginRight","paddingLeft","event","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAuD,OAAvD;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA,kBACZN,QAAQ,CAAC,EAAD,CADI;AAAA;AAAA,MAC/BO,KAD+B;AAAA,MACxBC,QADwB;;AAGtC,MAAMC,SAAS,GAAGL,WAAW,CAACG,KAAD,EAAQ,GAAR,CAA7B;AACA,MAAMG,QAAQ,GAAGR,WAAW,CAACI,KAAK,CAACI,QAAP,EAAiB,CAACD,SAAD,CAAjB,CAA5B;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,SAAS,CAACE,IAAV,EAAJ,EAAqB;AACnBL,MAAAA,KAAK,CAACM,aAAN,CAAoB,WAApB;AACD;;AACDF,IAAAA,QAAQ,CAACD,SAAD,CAAR;AACD,GALQ,EAKN,CAACA,SAAD,EAAYC,QAAZ,CALM,CAAT;AAQAT,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFQ,EAEN,CAACF,KAAK,CAACO,UAAP,CAFM,CAAT;AAGA,sBACA,uDAEM,oBAAC,SAAD,CACE;AADF;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,WAAW,EAAE,OAA7B;AAAsCC,MAAAA,WAAW,EAAE;AAAnD,KAFT;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,aAAWT,QAAQ,CAACS,KAAK,CAACC,MAAN,CAAaX,KAAd,CAAnB;AAAA,KAJZ;AAKE,IAAA,KAAK,EAAEA,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CADA;AAYD;AAAA;AAGG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect, useCallback} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport useDebounce from \"../../hooks/useDebounce\";\n\nexport default function SearchBar(props){\n  const [value, setValue] = useState(\"\")\n\n  const userInput = useDebounce(value, 200);\n  const onSearch = useCallback(props.onSearch, [userInput]);\n\n  useEffect(() => {\n    if (userInput.trim()){\n      props.setLoadStatus('SEARCHING')\n    }\n    onSearch(userInput);\n  }, [userInput, onSearch])\n\n\n  useEffect(() => {\n    setValue('')  \n  }, [props.searchMode])\n  return(\n  <>\n\n        <TextField  \n          // style={{ width: '70%' }}\n          style={{ width: '80%', marginRight: '100px', paddingLeft: '200px' }}\n          variant='filled'\n          onChange={(event) => setValue(event.target.value)}\n          value={value}     \n        />  \n  </>\n  )\n};\n\n\n    /*<form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n      <input\n        data-testid=\"trail-name-input\"\n        className=\"search-input\"\n        name=\"search_bar\"\n        type=\"text\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        placeholder=\"Where do you wanna search?\"\n      />\n    </form>*/"]},"metadata":{},"sourceType":"module"}